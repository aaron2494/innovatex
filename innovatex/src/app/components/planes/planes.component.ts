import { CommonModule, NgFor } from '@angular/common';
import { AfterViewInit, Component } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { HttpClient } from '@angular/common/http';
declare var MercadoPago: any;

@Component({
  selector: 'app-planes',
  imports: [NgFor,CommonModule,FormsModule],
  templateUrl: './planes.component.html',
  styleUrl: './planes.component.scss',
  standalone:true,
})

export class PlanesComponent  implements AfterViewInit {
  
  constructor(private http: HttpClient){
  }
  

    usuarioGoogleId: string = '';
  email: string = '';
  mp: any;
  planSeleccionado: any = null;
  cargando = false;

  ngOnInit() {
    const usuario = JSON.parse(localStorage.getItem('usuario') || '{}');
    this.usuarioGoogleId = usuario.sub || ''; // o la clave correcta
    this.email = usuario.email || '';
  }

planes = [
  { 
    nombre: 'B√°sico', 
    descripcion: 'Ideal para peque√±as y medianas empresas que esten en busca de optimizar sus procesos de manera m√°s eficiente. Incluye herramientas esenciales para el manejo de tu negocio, con soporte t√©cnico b√°sico pero eficiente. Perfecto para quienes est√°n comenzando a dar sus primeros pasos en el mundo digital.', 
    precio: 1
  },
  { 
    nombre: 'Profesional', 
    descripcion: 'Soluci√≥n avanzada para las empresas que necesitan herramientas m√°s potentes para crecer y poder gestionar operaciones de mayor escala. Con acceso a funciones premium y soporte t√©cnico prioritario, este plan est√° dise√±ado para optimizar la productividad y ofrecer soluciones personalizadas.', 
    precio: 2 
  },
  { 
    nombre: 'Premium', 
    descripcion: 'Automatizaci√≥n total para empresas grandes y proyectos ambiciosos. Incluye las funcionalidades del plan Profesional y herramientas avanzadas de an√°lisis, seguridad y gesti√≥n. Acceso a soporte personalizado 24/7, optimizaci√≥n de procesos a medida y caracter√≠sticas avanzadas para maximizar la eficiencia.', 
    precio: 3
  }
];

  ngAfterViewInit(): void {
    this.mp = new MercadoPago('APP_USR-2d076423-1a9e-4bb6-852d-b43808b975d2', {
      locale: 'es-AR'
    });
  }

prepararPago(plan: any) {
  this.planSeleccionado = plan;
  this.cargando = true;

  const container = document.getElementById('wallet_container');
  if (container) {
    container.innerHTML = '';
  }

  const origen = localStorage.getItem('usuario') || 'anonimo';

  const preference = {
    plan: plan,
    origen: origen
  };

  this.http.post<any>('https://backend-mp-sage.vercel.app/api/crear-preferencia', preference).subscribe({
    next: (res) => {
      this.cargando = false;
      const preferenciaId = res.preferenceId;

      this.mp.bricks().create('wallet', 'wallet_container', {
        initialization: {
          preferenceId: preferenciaId
        },
        customization: {
          texts: {
            valueProp: 'smart_option'
          }
        },
        callbacks: {
          onReady: () => {
            console.log('‚úÖ Brick listo');
            this.cargando = false;
          },
          onError: (error: any) => {
            console.error('‚ùå Error con Brick:', error);
            this.cargando = false;
          },
          // üîΩ Agreg√°s tu callback para guardar la compra
          onSubmit: async () => {
            const compra = {
              userId: this.usuarioGoogleId,
              email: this.email,
              plan: plan.nombre
            };

            this.http.post('https://backend-mp-sage.vercel.app/api/guardar-compra', compra).subscribe({
              next: (res) => {
                console.log('‚úÖ Compra guardada correctamente');
              },
              error: (err) => {
                console.error('‚ùå Error al guardar la compra:', err);
              }
            });
          }
        }
      });
    },
    error: (err) => {
      console.error('‚ùå Error al obtener preferenceId:', err);
      this.cargando = false;
    }
  });
}

}